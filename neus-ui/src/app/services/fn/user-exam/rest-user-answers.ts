/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';


export interface RestUserAnswers$Params {
  'user-id': string;
  'exam-id': string;
  mode: string;
}

export function restUserAnswers(http: HttpClient, rootUrl: string, params: RestUserAnswers$Params, context?: HttpContext): Observable<StrictHttpResponse<{
}>> {
  const rb = new RequestBuilder(rootUrl, restUserAnswers.PATH, 'put');
  if (params) {
    rb.path('user-id', params['user-id'], {});
    rb.path('exam-id', params['exam-id'], {});
    rb.path('mode', params.mode, {});
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<{
      }>;
    })
  );
}

restUserAnswers.PATH = '/user-exam/reset/{user-id}/{exam-id}/{mode}';
