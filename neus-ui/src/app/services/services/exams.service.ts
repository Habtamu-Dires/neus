/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { createExam } from '../fn/exams/create-exam';
import { CreateExam$Params } from '../fn/exams/create-exam';
import { ExamDto } from '../models/exam-dto';
import { getExamDetail } from '../fn/exams/get-exam-detail';
import { GetExamDetail$Params } from '../fn/exams/get-exam-detail';

@Injectable({ providedIn: 'root' })
export class ExamsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `createExam()` */
  static readonly CreateExamPath = '/exams';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `createExam()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createExam$Response(params: CreateExam$Params, context?: HttpContext): Observable<StrictHttpResponse<{
}>> {
    return createExam(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `createExam$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  createExam(params: CreateExam$Params, context?: HttpContext): Observable<{
}> {
    return this.createExam$Response(params, context).pipe(
      map((r: StrictHttpResponse<{
}>): {
} => r.body)
    );
  }

  /** Path part for operation `getExamDetail()` */
  static readonly GetExamDetailPath = '/exams/{exam-id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getExamDetail()` instead.
   *
   * This method doesn't expect any request body.
   */
  getExamDetail$Response(params: GetExamDetail$Params, context?: HttpContext): Observable<StrictHttpResponse<ExamDto>> {
    return getExamDetail(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getExamDetail$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getExamDetail(params: GetExamDetail$Params, context?: HttpContext): Observable<ExamDto> {
    return this.getExamDetail$Response(params, context).pipe(
      map((r: StrictHttpResponse<ExamDto>): ExamDto => r.body)
    );
  }

}
