BEGIN;

CREATE TABLE IF NOT EXISTS public._user
(
    enabled boolean NOT NULL,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    registration_date timestamp(6) without time zone,
    email character varying(255) NOT NULL,
    external_id character varying(255) NOT NULL,
    CONSTRAINT _user_pkey PRIMARY KEY (id),
    CONSTRAINT _user_email_key UNIQUE (email),
    CONSTRAINT _user_external_id_key UNIQUE (external_id)
);

CREATE TABLE IF NOT EXISTS public.exam
(
    duration integer NOT NULL,
    random_question_count integer,
    year integer,
    id bigint NOT NULL,
    external_id uuid NOT NULL,
    exam_type character varying(255),
    CONSTRAINT exam_pkey PRIMARY KEY (id),
    CONSTRAINT exam_external_id_key UNIQUE (external_id)
);

CREATE TABLE IF NOT EXISTS public.payment
(
    amount numeric(38, 2),
    created_at timestamp(6) without time zone,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id bigint,
    external_id uuid NOT NULL,
    currency character varying(255) ,
    payment_method character varying(255) ,
    payment_status character varying(255) ,
    transaction_id character varying(255) ,
    CONSTRAINT payment_pkey PRIMARY KEY (id),
    CONSTRAINT payment_external_id_key UNIQUE (external_id)
);

CREATE TABLE IF NOT EXISTS public.question
(
    question_number integer NOT NULL,
    exam_id bigint,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    external_id uuid NOT NULL,
    block_number character varying(255) ,
    category character varying(255) ,
    department character varying(255) ,
    explanation text ,
    question_text text ,
    choice jsonb,
    media_urls character varying(255)[] ,
    CONSTRAINT question_pkey PRIMARY KEY (id),
    CONSTRAINT question_external_id_key UNIQUE (external_id),
    CONSTRAINT question_question_number_exam_id_key UNIQUE (question_number, exam_id)
);

CREATE TABLE IF NOT EXISTS public.question_choice_stats
(
    percentage double precision,
    exam_id bigint NOT NULL,
    last_updated timestamp(6) without time zone,
    selection_count bigint,
    total_responses bigint,
    choice_id character varying(255)  NOT NULL,
    question_id character varying(255)  NOT NULL,
    CONSTRAINT question_choice_stats_pkey PRIMARY KEY (exam_id, choice_id, question_id)
);

CREATE TABLE IF NOT EXISTS public.resource
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    parent_resource_id bigint,
    external_id uuid NOT NULL,
    content_path character varying(255) ,
    description text ,
    preview_content_path character varying(255) ,
    required_sub_level character varying(255) ,
    title character varying(255)  NOT NULL,
    type character varying(255) ,
    CONSTRAINT resource_pkey PRIMARY KEY (id),
    CONSTRAINT resource_external_id_key UNIQUE (external_id),
    CONSTRAINT resource_title_key UNIQUE (title)
);

CREATE TABLE IF NOT EXISTS public.subscription
(
    end_date timestamp(6) without time zone,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    start_date timestamp(6) without time zone,
    user_id bigint,
    external_id uuid NOT NULL,
    level character varying(255) ,
    CONSTRAINT subscription_pkey PRIMARY KEY (id),
    CONSTRAINT subscription_external_id_key UNIQUE (external_id),
    CONSTRAINT subscription_user_id_key UNIQUE (user_id)
);

CREATE TABLE IF NOT EXISTS public.subscription_plan
(
    duration_in_month integer NOT NULL,
    enabled boolean NOT NULL,
    price numeric(38, 2),
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    external_id uuid NOT NULL,
    level character varying(255)  NOT NULL,
    benefits jsonb,
    CONSTRAINT subscription_plan_pkey PRIMARY KEY (id),
    CONSTRAINT subscription_plan_external_id_key UNIQUE (external_id),
    CONSTRAINT subscription_plan_level_key UNIQUE (level)
);

CREATE TABLE IF NOT EXISTS public.temp_choice_stats
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    selection_count integer NOT NULL,
    exam_id bigint,
    user_id bigint,
    choice_id character varying(255) ,
    question_id character varying(255) ,
    CONSTRAINT temp_choice_stats_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_exam
(
    time_left_in_minutes integer,
    exam_id bigint,
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    last_modified_date timestamp(6) without time zone,
    user_id bigint,
    status character varying(255) ,
    study_mode_correct_answers jsonb,
    study_mode_user_answers jsonb,
    test_mode_correct_answers jsonb,
    test_mode_user_answers jsonb,
    CONSTRAINT user_exam_pkey PRIMARY KEY (id),
    CONSTRAINT user_exam_user_id_exam_id_key UNIQUE (user_id, exam_id)
);

ALTER TABLE IF EXISTS public.exam
    ADD CONSTRAINT fkrqjsyxuu4l94f6x3n65x6sypd FOREIGN KEY (id)
    REFERENCES public.resource (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS exam_pkey
    ON public.exam(id);


ALTER TABLE IF EXISTS public.payment
    ADD CONSTRAINT fkd6k9t8rxma3qp663stbfsg5s0 FOREIGN KEY (user_id)
    REFERENCES public._user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.question
    ADD CONSTRAINT fkhupso6ldavcx993tfnrjsdl1p FOREIGN KEY (exam_id)
    REFERENCES public.exam (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.resource
    ADD CONSTRAINT fkdr2h4c4hjjoclae15c1lkel3 FOREIGN KEY (parent_resource_id)
    REFERENCES public.resource (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.subscription
    ADD CONSTRAINT fkltk40upjcyd1sb88ree2wsvsm FOREIGN KEY (user_id)
    REFERENCES public._user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS subscription_user_id_key
    ON public.subscription(user_id);


ALTER TABLE IF EXISTS public.user_exam
    ADD CONSTRAINT fkat1lw3ixclcbxih44tbanlvfi FOREIGN KEY (user_id)
    REFERENCES public._user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_exam
    ADD CONSTRAINT fkl44lsl55re2s7jhjlh527y85l FOREIGN KEY (exam_id)
    REFERENCES public.exam (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;